import telebot
from datetime import datetime
import json
import random
import requests
import os

token = '--> TOKEN <--'
bot = telebot.TeleBot(token)
step = 0


def save_to_file(message, numb='xxx'):
    currenttime = datetime.fromtimestamp(int(message.date)).strftime('%d.%m.%y %H:%M')
    nameoffile = '@' + str(message.from_user.username) + '.txt'
    if numb == 'xxx':
        with open(nameoffile, 'a+') as file:
            file.write('@' + message.from_user.username + ' [' + currenttime + ']\n' + message.text + '\n')
    else:
        with open(nameoffile, 'a+') as file:
            file.write('@' + message.from_user.username + ' [' + currenttime + ']\n' + '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª '+ numb + '\n')


@bot.message_handler(commands=['start'])
def start_message(message):
    global step
    step = 0
    output1 = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∏–∫–∞.\n" \
              "–ü—Ä–∏—Å–∞–∂–∏–≤–∞–π—Ç–µ—Å—å, —Å–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —á—Ç–æ —É–º–µ—é."
    bot.send_message(message.chat.id, output1)

    output2 = "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /step1\n" \
              "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—É—Ç–æ—Ä–∏–∞–ª –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, —Ç–æ –Ω–∞–±–µ—Ä–∏—Ç–µ /menu"
    bot.send_message(message.chat.id, output2)

    save_to_file(message)


@bot.message_handler(commands=['step1'])
def step1_message(message):
    global step
    step = 1
    output = "–ë–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:\n" \
             "1. –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" \
             "2. –ü—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" \
             "–û—Ç–≤–µ—Ç—ã –≤—ã–±–∏—Ä–∞—é—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω–æ –∏–∑ –ª—é–±–æ–≥–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5)\n" \
             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑"
    bot.send_message(message.chat.id, output)
    save_to_file(message)


@bot.message_handler(commands=['step2'])
def step2_message(message):
    global step
    step = 2
    output1 = "–ë–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –≤–∞–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ, —Å—Å—ã–ª–∫–æ–π, —á–µ–º —É–≥–æ–¥–Ω–æ\n" \
             "–ù–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–∏–º —Å—Ç–∏–∫–µ—Ä–æ–º:"
    bot.send_message(message.chat.id, output1)
    bot.send_sticker(message.chat.id, "CAACAgIAAxkBAANqXqmdcv89K31nuptVsyhXaeSca5YAAjsDAAK1cdoGGEsG0lVTy0QZBA")
    output2 = "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∏–∫–µ—Ä, –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" \
             "–ü–µ—Ä–µ–π—Ç–∏ –¥–∞–ª—å—à–µ /step3"
    bot.send_message(message.chat.id, output2)

    save_to_file(message)

@bot.message_handler(commands=['step3'])
def step3_message(message):
    global step
    step = 3
    output1 = "–ú–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥:"
    bot.send_message(message.chat.id, output1)
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='–í–∑—è—Ç—å –∞–≤—Ç–æ—Ä–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É', callback_data="–†–∞–∑—É–º–Ω—ã–π –≤—ã–±–æ—Ä üòâ"))
    bot.send_message(message.chat.id, text="–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º", reply_markup=markup)
    save_to_file(message)


@bot.message_handler(commands=['step4'])
def step4_message(message):
    global step
    step = 4
    output1 = "–ú–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:"
    bot.send_message(message.chat.id, output1)

    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='...–∑–≤–µ–∑–¥–∞?', callback_data="–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞, –Ω–æ –Ω–µ—Ç"),
               telebot.types.InlineKeyboardButton(text='–ó–µ–º–ª—è', callback_data="–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑"))
    markup.add(telebot.types.InlineKeyboardButton(text='–°–æ–ª–Ω—Ü–µ', callback_data="–ù–µ —Å–æ–≤—Å–µ–º, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑"),
               telebot.types.InlineKeyboardButton(text='–ü—É–ª—å—Å–∞—Ä', callback_data="–ê —Ç—ã —É–º—ë–Ω, –ø—Ä–∞–≤–∏–ª—å–Ω–æ"))
    bot.send_message(message.chat.id, text="–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–π—Ç—Ä–æ–Ω–Ω–∞—è –∑–≤–µ–∑–¥–∞ —Å –º–∞–≥–Ω–∏—Ç–Ω—ã–º –ø–æ–ª–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∫–ª–æ–Ω–µ–Ω–æ "
                                           "–∫ –æ—Å–∏ –≤—Ä–∞—â–µ–Ω–∏—è?", reply_markup=markup)
    save_to_file(message)


@bot.message_handler(commands=['step5'])
def step5_message(message):
    global step
    step = 5
    output1 = "–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤–∏–¥—É\n" \
              "(–Ω–∞–∂–º–∏—Ç–µ /hide —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏)\n"
    bot.send_message(message.chat.id, output1)

    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=5, resize_keyboard=True, one_time_keyboard=False)
    keyboard.row('/get_audio', '/get_video')
    keyboard.row('/hide')
    bot.send_message(message.chat.id, text="–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step6", reply_markup=keyboard)
    save_to_file(message)


@bot.message_handler(commands=['get_audio'])
def get_audio_message(message):
    bot.send_audio(message.chat.id, 'CQACAgIAAxkBAAPgXqqn99W73hTosqEDW1IIeAJM7XYAApIHAALJ41BJr1gEldG85vIZBA')
    save_to_file(message)

@bot.message_handler(commands=['get_video'])
def get_video_message(message):
    bot.send_video(message.chat.id, 'BAACAgIAAxkBAAPeXqqnZl6UNZADq2ZAzVUTtHYwSzAAApAHAALJ41BJdYLdSxq1a9sZBA')
    save_to_file(message)

@bot.message_handler(commands=['hide'])
def hide_message(message):
    global step
    bot.send_message(message.chat.id, text='–ü–∞–Ω–µ–ª—å–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —É–±—Ä–∞–Ω–∞', reply_markup=telebot.types.ReplyKeyboardRemove())
    if step == 5:
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step6')
    save_to_file(message)


@bot.message_handler(commands=['step6'])
def step6_message(message):
    global step
    step = 6
    output1 = "–ë–æ—Ç –º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω—É–∂–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.\n" \
              "–ù–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ —Å—Ç–∏–∫–µ—Ä –ø–æ—Å–ª–∞—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∏–∫–µ—Ä, –∞ –Ω–∞ —Ñ–æ—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–º\n" \
              "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—Å–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä, –ª–∏–±–æ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π"
    bot.send_message(message.chat.id, output1)
    bot.send_message(message.chat.id, "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7")


@bot.message_handler(commands=['step7'])
def step7_message(message):
    global step
    step = 7
    output1 = "–ò –Ω–∞–∫–æ–Ω–µ—Ü –±–æ—Ç –º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º\n" \
              "(–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Å—å –ª–æ–≥ —Å–æ–æ–±—â–µ–Ω–∏–π -> /get_log\n" \
              "–ò —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n" \
              "(–ß—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∏—Å–ª–∞–ª –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ -> /get_photos"
    bot.send_message(message.chat.id, output1)
    bot.send_message(message.chat.id, "–ù–∞ —ç—Ç–æ–º –Ω–∞—à–∞ –º–∞–ª–µ–Ω—å–∫–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞.\n"
                                      "–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é -> /menu")


@bot.message_handler(content_types=['audio'])
def send_text(message):
    bot.send_message(message.chat.id, text='–û—Ç–ª–∏—á–Ω–∞—è –ø–µ—Å–Ω—è, —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤ –ø–ª–µ–π–ª–∏—Å—Ç')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    save_to_file(message, '–∞—É–¥–∏–æ')


@bot.message_handler(content_types=['video'])
def send_text(message):
    bot.send_message(message.chat.id, text='–í–∏–¥–µ–æ –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    save_to_file(message, '–≤–∏–¥–µ–æ')


@bot.message_handler(content_types=['document'])
def send_text(message):
    bot.send_message(message.chat.id, text='–°–æ—Ö—Ä–∞–Ω—é —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    save_to_file(message, '–¥–æ–∫—É–º–µ–Ω—Ç')


@bot.message_handler(content_types=['location'])
def send_text(message):
    bot.send_message(message.chat.id, text='–õ–æ–∫–∞—Ü–∏—é –ø–æ–ª—É—á–∏–ª')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    save_to_file(message, '–ª–æ–∫–∞—Ü–∏—é')


@bot.message_handler(content_types=['contact'])
def send_text(message):
    bot.send_message(message.chat.id, text='–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    save_to_file(message, '–∫–æ–Ω—Ç–∞–∫—Ç')


@bot.message_handler(content_types=['sticker'])
def send_text(message):
    global step
    if step == 6:
        bot.send_message(message.chat.id, "–ö—Ä—É—Ç–æ–π —Å—Ç–∏–∫–µ—Ä, –∞ —É –º–µ–Ω—è –µ—Å—Ç—å –≤–æ—Ç —Ç–∞–∫–æ–π")
        bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAIBFF6qrL9iCgqksVhLHNLhHbscsOAqAAIYAAN-hMMI70OajTgDh-sZBA")
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    else:
        bot.send_message(message.chat.id, "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä, —Å–æ—Ö—Ä–∞–Ω—é —Å–µ–±–µ")


@bot.message_handler(content_types=['photo'])
def send_text(message):
    bot.send_message(message.chat.id, text='–§–æ—Ç–∫–∞ –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä !')
    global step
    if step == 6:
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ -> /step7')
    file_id = message.json['photo'][2]['file_id']
    togeturl = requests.get('https://api.telegram.org/bot' + token + '/getFile?file_id=' + file_id)
    file_path = json.loads(togeturl.content.decode())['result']['file_path']
    url = 'https://api.telegram.org/file/bot' + str(token) + '/' + file_path
    # save to harddrive
    currenttime = datetime.fromtimestamp(int(message.date)).strftime('%Y-%m-%d_%H-%M')
    img_folder_path = os.path.join(os.path.dirname(__file__), "@"+message.from_user.username)
    try:
        os.makedirs("@"+message.from_user.username)
    except:
        pass
    dirListing = os.listdir(img_folder_path)
    picname = os.path.join(img_folder_path, str(len(dirListing)+1)+'_'+currenttime+'.jpg')
    open(picname, 'wb').write(requests.get(url).content)
    currenttime = datetime.fromtimestamp(int(message.date)).strftime('%d.%m.%y %H:%M')
    nameoffile = '@' + str(message.from_user.username) + '.txt'
    with open(nameoffile, 'a+') as file:
        file.write('@' + message.from_user.username + ' [' + currenttime + ']\n' + '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ' + '\n')


@bot.message_handler(commands=['get_log'])
def get_log_message(message):
    log = open(os.path.join(os.path.dirname(__file__), "@"+message.from_user.username) + '.txt', 'rb')
    bot.send_document(message.chat.id, log)
    log.close()

@bot.message_handler(commands=['get_photos'])
def get_photos_message(message):
    path = os.path.join(os.path.dirname(__file__), "@"+message.from_user.username)
    list_of_photos = os.listdir(path)
    if len(list_of_photos) == 0:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –ø—Ä–∏—Å–ª–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏')
    else:
        for i in list_of_photos:
            sending = open(os.path.join(os.path.dirname(__file__), "@"+message.from_user.username, i), 'rb')
            bot.send_photo(message.chat.id, sending)
            sending.close()
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é -> /menu")

@bot.message_handler(commands=['menu'])
def get_photos_message(message):
    global step
    step = 0
    input1 = '/start - –Ω–∞—á–∞—Ç—å —Ç—É—Ç–æ—Ä–∏–∞–ª –∑–∞–Ω–æ–≤–æ\n' \
            '/step1 - –î–≤–∞ –≤–∏–¥–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è\n' \
            '/step2 - –ë–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Å—Ç–∏–∫–µ—Ä–∞–º–∏\–∞—É–¥–∏–æ\–∏—Ç–¥\n' \
            '/step3 - –ú–µ–Ω—é —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π\n' \
            '/step4 - –ú–µ–Ω—é —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏\n' \
            '/step5 - –ü–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\n' \
            '/step6 - –ë–æ—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ª—é–±–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è\n' \
            '/step7 - –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥ —Å–æ–æ–±—â–µ–Ω–∏–π \ –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏'
    bot.send_message(message.chat.id, input1)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    global step
    bot.send_message(call.message.chat.id, call.data)
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    if step == 3:
        bot.send_message(call.message.chat.id, '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ -> /step4')
    elif step == 4:
        bot.send_message(call.message.chat.id, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ -> /step4\n"
                                              "–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ -> /step5")

    for i in range(len(call.message.json['reply_markup']['inline_keyboard'])):
        for j in range(len(call.message.json['reply_markup']['inline_keyboard'][i])):
            if str(call.message.json['reply_markup']['inline_keyboard'][i][j]['callback_data']) == str(call.data):
                replytext = call.message.json['reply_markup']['inline_keyboard'][i][j]['text']

    currenttime = datetime.fromtimestamp(int(call.message.date)).strftime('%d.%m.%y %H:%M')
    nameoffile = '@' + str(call.message.chat.username) + '.txt'
    with open(nameoffile, 'a+') as file:
        file.write('@' + call.message.chat.username + ' [' + currenttime + ']\n' + replytext + '\n')


@bot.message_handler(func=lambda m: True)
def save_text(message):
    global step
    if message.text[0] == "/":
        bot.reply_to(message, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /menu')
    else:
        if step == 0:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å —Ç—É—Ç–æ—Ä–∏–∞–ª –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start\n'
                                              '–õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /menu —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—é')
        elif step == 1:
            answers = ['–æ—Ç–≤–µ—Ç 1',
                       '–æ—Ç–≤–µ—Ç 2',
                       '–æ—Ç–≤–µ—Ç 3',
                       '–æ—Ç–≤–µ—Ç 4',
                       '–æ—Ç–≤–µ—Ç 5']
            bot.reply_to(message, answers[random.randint(0, 4)]+'\n(1. –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)')
            bot.send_message(message.chat.id, answers[random.randint(0, 4)]+'\n(2. –ü—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)')
            bot.send_message(message.chat.id, "----------\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /step2")
        elif step == 2:
            answers = ['CAACAgIAAxkBAANzXqmgRZwecvrkyTAF54vdGZEz7roAAjkAAw220hlfMEC2OVMxNBkE',
                       'CAACAgIAAxkBAANrXqmdf9UJ0I-NAl4PlqG9p_FfKrAAAgQAA-nYEyiPjdYgb2mImRkE',
                       'CAACAgIAAxkBAANsXqmdhNzR0FKAPaUfrPepJMPE6qoAAvcAA1advQoLciQdSPQNMBkE',
                       'CAACAgIAAxkBAANtXqmdjU0nQz7vkzV5D1lMpVyBtOMAAkYAA1KJkSP4_uXkCtUKHRkE',
                       'CAACAgIAAxkBAANuXqmdkY6gTn90VoOM--r1xb269egAAhoAA_cCyA-vLwlpco42yxkE']
            bot.send_sticker(message.chat.id, answers[random.randint(0, 4)])
            bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –µ—â–µ? –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                                              "–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ -> /step3")
        elif step == 3:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step4')
        elif step == 4:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step5')
        elif step == 5:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step6')
        elif step == 6:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ -> /step7')
        elif step == 7:
            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ -> /menu')
    save_to_file(message)

bot.polling()
